{"version":3,"sources":["actions.js","App.js","reducer.js","index.js"],"names":["ADD_COUNT","SUBSTRACT_COUNT","App","props","count","store","getState","useState","toggle","className","onClick","dispatch","type","addCount","value","substractCount","initialState","createStore","state","action","applyMiddleware","next","console","log","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMAAaA,G,MAAY,aACZC,EAAkB,kB,OCEhB,SAASC,EAAIC,GAC1B,IAAQC,EAAUD,EAAME,MAAMC,WAAtBF,MACR,EAAwBG,mBAAS,GAAE,mBAArBC,GAAF,KAAQ,MASpB,OACE,sBAAKC,UAAU,MAAK,UAClB,+BAAI,UAAQL,KACZ,+BACE,wBAAQM,QAZF,YDHU,SAACL,GACvBA,EAAMM,SAAS,CACbC,KAAMZ,GAEV,CCAIa,CAASV,EAAME,OACfG,GAAO,SAACM,GAAK,OAAa,EAARA,CAAS,GAC7B,EAS2B,SAAC,MACtB,wBAAQJ,QATI,YDDU,SAACL,GAC7BA,EAAMM,SAAS,CACbC,KAAMX,GAEV,CCFIc,CAAeZ,EAAME,OACrBG,GAAO,SAACM,GAAK,OAAa,EAARA,CAAS,GAC7B,EAMiC,SAAC,WAIpC,C,kBCtBME,EAAe,CACnBZ,MAAO,GCKT,IAWMC,EAAQY,aDbC,WAAmD,IAA/BC,EAAK,uDAAGF,EAAcG,EAAM,uCAC7D,OAAQA,EAAOP,MACb,KAAKZ,EACH,OAAO,2BACFkB,GAAK,IACRd,MAAOc,EAAMd,MAAQ,IAEzB,KAAKH,EACH,OAAO,2BACFiB,GAAK,IACRd,MAAOc,EAAMd,MAAQ,IAEzB,QACE,OAAOc,EAEb,GCFsCE,aAXvB,WAAH,OAAS,SAACC,GAAI,OAAK,SAACF,GAC9BG,QAAQC,IAAI,gBAAiBJ,EAAOP,MACpCS,EAAKF,EACP,CAAE,CAAD,IAEoB,WAAH,OAAS,SAACE,GAAI,OAAK,SAACF,GAChB,oBAAhBA,EAAOP,MACTS,EAAKF,EAET,CAAE,CAAD,KAIKK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAAC1B,EAAG,CAACG,MAAOA,MAEdmB,E","file":"static/js/main.9be6aa63.chunk.js","sourcesContent":["export const ADD_COUNT = \"ADD_COUNT\";\r\nexport const SUBSTRACT_COUNT = \"SUBSTRACT_COUNT\";\r\n\r\nexport const addCount = (store) => {\r\n  store.dispatch({\r\n    type: ADD_COUNT\r\n  });\r\n};\r\n\r\nexport const substractCount = (store) => {\r\n  store.dispatch({\r\n    type: SUBSTRACT_COUNT\r\n  });\r\n};\r\n","import \"./styles.css\";\nimport { addCount, substractCount } from \"./actions\";\nimport { useState } from \"react\";\nexport default function App(props) {\n  const { count } = props.store.getState();\n  const [value, toggle] = useState(0);\n  const add = () => {\n    addCount(props.store);\n    toggle((value) => value ^ 1);\n  };\n  const substract = () => {\n    substractCount(props.store);\n    toggle((value) => value ^ 1);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Count: {count}</h1>\n      <h2>\n        <button onClick={add}>+</button>\n        <button onClick={substract}>-</button>\n      </h2>\n    </div>\n  );\n}\n","import { ADD_COUNT, SUBSTRACT_COUNT } from \"./actions\";\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_COUNT:\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      };\r\n    case SUBSTRACT_COUNT:\r\n      return {\r\n        ...state,\r\n        count: state.count - 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport appReducer from \"./reducer\";\n\nconst logger = () => (next) => (action) => {\n  console.log(\"action type :\", action.type);\n  next(action);\n};\n\nconst stopSubtract = () => (next) => (action) => {\n  if (action.type !== \"SUBSTRACT_COUNT\") {\n    next(action);\n  }\n};\n\nconst store = createStore(appReducer, applyMiddleware(logger, stopSubtract));\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App store={store} />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}